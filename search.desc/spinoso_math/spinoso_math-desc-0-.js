searchState.loadedDescShard("spinoso_math", 0, "The Ruby Math module.\nError that indicates a math function returned a value that …\nError that indicates a math function evaluated to an out …\nEuler’s number (e)\nSum type of all errors possibly returned from <code>Math</code> …\nA handle to the <code>Math</code> module.\nError that indicates a <code>Math</code> module function is not …\nError that indicates a <code>Math</code> module function is not …\nArchimedes’ constant (π)\nComputes the arccosine of the given value. Returns results …\nComputes the inverse hyperbolic cosine of the given value.\nComputes the arcsine of the given value. Returns results …\nComputes the inverse hyperbolic sine of the given value.\nComputes the arctangent of the given value. Returns …\nComputes the four quadrant arctangent of <code>value</code> (<code>y</code>) and …\nComputes the inverse hyperbolic tangent of the given value.\nReturns the cube root of the given value.\nComputes the cosine of the given value (expressed in …\nComputes the hyperbolic cosine of the given value …\nCalculates the error function of the given value.\nCalculates the complementary error function of the given …\nReturns <code>e**x</code>.\nReturns a tuple array containing the normalized fraction …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalculates the gamma function of the given value.\nReturns <code>sqrt(x**2 + y**2)</code>, the hypotenuse of a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the value of <code>fraction * (2**exponent)</code>.\nCalculates the logarithmic gamma of value and the sign of …\nReturns the logarithm of the number with respect to an …\nReturns the base 10 logarithm of the number.\nReturns the base 2 logarithm of the number.\nRetrieve the exception message associated with this error.\nRetrieve the exception message associated with this error.\nRetrieve the exception message associated with this not …\nConstructs a new, default <code>Math</code>.\nConstruct a new, default domain error.\nConstruct a new, default not implemented error.\nComputes the sine of the given value (expressed in …\nComputes the hyperbolic sine of the given value (expressed …\nReturns the non-negative square root of the given value.\nComputes the tangent of the given value (expressed in …\nComputes the hyperbolic tangent of the given value …\nConstruct a new, domain error with a message.\nConstruct a new, not implemented error with a message.")