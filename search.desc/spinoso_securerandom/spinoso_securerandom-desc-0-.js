searchState.loadedDescShard("spinoso_securerandom", 0, "Secure random number generator interface.\nError that indicates an argument parsing or value logic …\nError that indicates an argument parsing or value logic …\nError that indicates the given maximum value is not finite …\nSum type of all errors possibly returned from <code>random_bytes</code>.\nGenerate floats in the range <code>[0, max)</code>.\nA random float that is greater than or equal to zero.\nGenerate signed integers in the range <code>[0, max)</code>.\nA random signed integer that is greater than or equal to …\nMax value when generating a random number from a range.\nError that indicates an error was received from the memory …\nGenerate floats in the range <code>[0.0, 1.0]</code>.\nRandom numeric value generated from the secure random …\nError that indicates the underlying source of randomness …\nError that indicates the underlying source of randomness …\nA handle to the underlying secure random number generator.\nGenerate a random sequence of ASCII alphanumeric bytes.\nGenerate a base64-encoded <code>String</code> of random bytes.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerate a hex-encoded <code>String</code> of random bytes.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRetrieve the exception message associated with this …\nRetrieve the exception message associated with this random …\nRetrieve the exception message associated with this domain …\nConstruct a new, default argument error.\nConstruct a new, default random bytes error.\nConstruct a new, default domain error.\nConstructs a new, default <code>SecureRandom</code>.\nGenerate a vector of random bytes.\nGenerate a single random number, either a float or an …\nGenerate a URL-safe base64-encoded <code>String</code> of random bytes.\nGenerate a version 4 UUID and return a <code>String</code>.\nConstruct a new argument error with a message.")