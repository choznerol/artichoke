searchState.loadedDescShard("spinoso_symbol", 0, "Identifier for interned byte strings and routines for …\nAn iterator that returns all the Symbols in an interner.\nOnly the ASCII region, i.e. the characters “A” to “Z…\nIdentifier that is an “attribute setter” method name.\nUnicode case folding strategies.\nIdentifier that is a class variable name.\nIdentifier that is a constant name.\nFull Unicode case mapping, suitable for most languages …\nIdentifier that is a global variable name.\nValid types for Ruby identifiers.\nAn iterator that yields a debug representation of a <code>Symbol</code> …\nIdentifier that is an instance variable name.\nExtension trait to return an iterator that returns all …\nIdentifier that contains “junk”.\nCurrently, just full Unicode case mapping. In the future, …\nIdentifier that is a local variable or method name.\nThe maximum identifier of a <code>Symbol</code>.\nError type for returned when a folding scheme could not be …\nError type returned from the <code>FromStr</code> implementation on …\nIdentifier bound to an interned byte string.\nError returned when a symbol identifier overflows.\nFull Unicode case mapping, adapted for Turkic languages …\nReturns an iterator that returns all symbol identifiers …\nCompare the byte contents of two symbols using ASCII …\nReturns the interned byte slice associated with the symbol …\nMake a case-insensitive string equality check based on the …\nMake a case-insensitive string comparison based on the …\nDefault to full Unicode case folding.\nConstruct a “junk” identifier type.\nWrite an <code>Inspect</code> iterator into the given destination using …\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct a <code>AllSymbols</code> iterator from an interner.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturn the <code>u32</code> identifier from this <code>Symbol</code>.\nReturns an iterator that yields a debug representation of …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether the symbol is the empty byte slice <code>b&quot;&quot;</code> in …\nReturns the length of the byte slice associated with the …\nConstruct a new full Unicode case folding.\nConstruct a new <code>NoSuchCaseFoldingScheme</code> error.\nReturn a new, default <code>IdentifierType</code>.\nConstruct a new <code>ParseIdentifierError</code>.\nConstruct a new, default <code>SymbolOverflowError</code>.\nConstruct a new <code>Symbol</code> from the given <code>u32</code>.\nCompare the byte contents of two symbols using Unicode …\nWrite an <code>Inspect</code> iterator into the given destination using …")