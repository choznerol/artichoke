searchState.loadedDescShard("spinoso_string", 0, "A String object holds and manipulates an arbitrary …\nOnly the ASCII region, i.e. the characters “A” to “Z…\nConventionally ASCII.\nASCII-8BIT, binary, arbitrary bytes.\nImmutable <code>String</code> byte iterator.\nUnicode case folding strategies.\nAn iterator that yields a byte string centered within a …\nError returned when failing to construct a <code>Center</code> iterator.\nAn iterator that yields a <code>u32</code> codepoints from a <code>String</code>.\nError returned when failing to construct a <code>Codepoints</code> …\n<code>OrdError</code> corresponds to an <code>ArgumentError</code> Ruby exception.\nThe given <code>String</code> is empty and has no first character.\nAn Encoding instance represents a character encoding …\nFull Unicode case mapping, suitable for most languages …\nAn iterator that yields a debug representation of a <code>String</code> …\nAn iterator that moves out of a string.\nError returned when failing to deserialize an <code>Encoding</code>.\nThe first character in a conventionally UTF-8 <code>String</code> is an …\nError returned when calling <code>String::codepoints</code> on a <code>String</code> …\nImmutable <code>String</code> byte slice iterator.\nMutable <code>String</code> byte iterator.\nCurrently, just full Unicode case mapping. In the future, …\nThe total number of supported encodings.\nA wrapper around the decomposed parts of a <code>Vec&lt;T&gt;</code>.\nFull Unicode case mapping, adapted for Turkic languages …\nConventionally UTF-8.\nError returned when calling <code>String::center</code> with an empty …\nReturns an unsafe mutable pointer to the string’s buffer.\nReturns the remaining bytes of this iterator as a mutable …\nExtracts a mutable slice containing the entire byte string.\nReturns a raw pointer to the string’s buffer.\nViews the underlying data as a subslice of the original …\nReturns the remaining bytes of this iterator as a slice.\nViews the underlying data as a subslice of the original …\nExtracts a slice containing the entire byte string.\nReturns an iterator over the bytes in this byte string.\nReturns the length of this <code>String</code> in bytes.\nReturns the number of bytes the string can hold without …\nThe number of elements the source vector can hold without …\nMake a case-insensitive string equality check based on the …\nMake a case-insensitive string comparison based on the …\nCenters this <code>String</code> in width with the given padding.\nReturns the character length of this <code>String</code>.\nReturns an iterator over the chars of a <code>String</code>.\nModifies this <code>String</code> in-place with the given record …\nModifies this <code>String</code> in-place and removes the last …\nReturns a one-character string at the beginning of the …\nClears the string, removing all bytes.\nReturns an iterator over the <code>u32</code> codepoints of a <code>String</code>.\nAppends the given bytes to this <code>String</code>.\nDefault to full Unicode case folding.\nConstruct a new <code>OrdError</code> for an empty <code>String</code>.\nReturns the <code>Encoding</code> of this <code>String</code>.\nCopies and appends all bytes in a slice to the <code>String</code>.\nOutputs the value of <code>Encoding#to_s</code>.\nOutputs the value of <code>Encoding#inspect</code>.\nWrite an <code>Inspect</code> iterator into the given destination using …\nReturns the argument unchanged.\nDecompose a <code>Vec&lt;T&gt;</code> into its raw components.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>String</code> directly from the raw components of …\nCreates a <code>String</code> directly from the raw components of …\nConstruct the raw components of a <code>Vec&lt;T&gt;</code> by decomposing it.\nReturns a reference to a byte or sub-byteslice depending …\nReturns the <code>index</code>’th character in the string.\nReturns a substring of characters in the string.\nReturns a mutable reference to a byte or sub-byteslice …\nReturns a reference to a byte or sub-byteslice, without …\nReturns a mutable reference to a byte or sub-byteslice, …\nReturns the index of the first occurrence of the given …\nReturns a string which represents the encoding for …\nReturns an iterator that yields a debug representation of …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the vector into <code>Box&lt;[u8]&gt;</code>.\nReturns an iterator that moves over the remaining bytes of …\nDecomposes a <code>String</code> into its raw components.\nViews the underlying data as a subslice of the original …\nCreates a <code>Vec&lt;T&gt;</code> directly from the raw components of …\nConverts self into a vector without clones or allocation.\nConstruct a new <code>OrdError</code> for an invalid UTF-8 byte …\nCreate a new invalid UTF-8 codepoint <code>CodepointsError</code>.\nReturns whether ASCII-compatible or not.\nReturns true for a string which has only ASCII characters.\nReturns true for dummy encodings.\nReturns true if the vector contains no bytes.\nReturns true for a <code>String</code> which is encoded correctly.\nReturns an iterator over this string’s underlying byte …\nReturns an iterator that allows modifying this string’s …\nReturns the number of bytes in the string, also referred …\nThe number of elements in the source vector, also referred …\nModify this <code>String</code> to have the first character converted …\nModify this <code>String</code> to have all characters converted to …\nModify this <code>String</code> to have the all characters converted to …\nRetrieve the exception message associated with this center …\nRetrieve the exception message associated with this center …\nError message for this <code>OrdError</code>.\nReturns the name of the encoding.\nReturns the list of name and aliases of the encoding.\nConstruct a new full Unicode case folding.\nConstruct a new <code>InvalidEncodingError</code>.\nConstructs a new, empty <code>String</code>.\nReturns the Integer ordinal of a one-character string.\nA non-null pointer to a buffer of <code>T</code>.\nAppends a given byte onto the end of this <code>String</code>.\nAppends a given <code>char</code> onto the end of this <code>String</code>.\nAppends a given string slice onto the end of this <code>String</code>.\nReserves capacity for at least <code>additional</code> more bytes to be …\nReserves the minimum capacity for exactly <code>additional</code> more …\nReverse the characters in the string.\nSet the <code>Encoding</code> of this <code>String</code>.\nForces the length of the string to <code>new_len</code>.\nShrinks the capacity of the vector with a lower bound.\nShrinks the capacity of the vector as much as possible.\nReturn a newly encoded <code>String</code> with <code>Encoding::Binary</code> …\nSerialize the encoding to a bitflag.\nShortens the string, keeping the first <code>len</code> bytes and …\nTry to deserialize an <code>Encoding</code> from a bitflag.\nDeserialize an encoding from a bitflag.\nTry to append a given Unicode codepoint onto the end of …\nA more permissive version of <code>try_push_codepoint</code> which can …\nTries to reserve capacity for at least <code>additional</code> more …\nTries to reserve the minimum capacity for exactly …\nConstructs a new, empty <code>String</code> with the specified capacity.\nConstructs a new, empty <code>String</code> with the specified capacity …\nWrite an <code>Inspect</code> iterator into the given destination using …\nCreate a new zero width padding <code>CenterError</code>.")